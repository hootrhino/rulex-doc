(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{426:function(t,s,a){"use strict";a.r(s);var e=a(17),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"章节概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#章节概述"}},[t._v("#")]),t._v(" 章节概述")]),t._v(" "),a("p",[t._v("这里介绍一下如何把基于 RULEX 框架实现的网关程序作为守护进程来运行，目前守护进程工具有很多种，比如 python 实现的 supervisor，还有 Linux 自己的 Systemd 等。在这里我简单给出使用 Systemd 来作为守护进程的 Demo。")]),t._v(" "),a("h2",{attrs:{id:"创建脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建脚本"}},[t._v("#")]),t._v(" 创建脚本")]),t._v(" "),a("p",[t._v("首先在这个路径下新建一个服务脚本:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("/usr/lib/systemd/system/rulex.service\n")])])]),a("h2",{attrs:{id:"脚本内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#脚本内容"}},[t._v("#")]),t._v(" 脚本内容")]),t._v(" "),a("div",{staticClass:"language-ini extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ini"}},[a("code",[a("span",{pre:!0,attrs:{class:"token section"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token section-name selector"}},[t._v("Unit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("Description")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("RULEX Engine")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token section"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token section-name selector"}},[t._v("Service")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("User")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("root")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("WorkingDirectory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("/usr/local/rulex/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("TimeoutStartSec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("ExecStart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("/usr/local/rulex/rulex run -config=/usr/local/rulex/rulex.ini")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("ExecStop")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v('echo "RULEX stop."')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token section"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token section-name selector"}},[t._v("Install")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("WantedBy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("multi-user.target")]),t._v("\n")])])]),a("h2",{attrs:{id:"service管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#service管理"}},[t._v("#")]),t._v(" Service管理")]),t._v(" "),a("ul",[a("li",[t._v("启动"),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl start rulex\n")])])])]),t._v(" "),a("li",[t._v("停止"),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl stop rulex\n")])])])]),t._v(" "),a("li",[t._v("查看"),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl status rulex\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"扩展"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩展"}},[t._v("#")]),t._v(" 扩展")]),t._v(" "),a("p",[t._v("其实有很多方法可实现进程监督者，这里就不一一列举了，有兴趣的朋友可以自己试试其他的，完善一下这里的文档。")]),t._v(" "),a("h2",{attrs:{id:"参考文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文档"}},[t._v("#")]),t._v(" 参考文档")]),t._v(" "),a("ul",[a("li",[t._v("https://wizardforcel.gitbooks.io/vbird-linux-basic-4e/content/150.html")]),t._v(" "),a("li",[t._v("http://supervisord.org")])])])}),[],!1,null,null,null);s.default=r.exports}}]);